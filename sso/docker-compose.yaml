version: '3'

volumes:
  postgres_volume:

services:
  pg:
    image: postgres:14-alpine3.17
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${POSTGRES_PORT}:5432"
    volumes:
      - postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "44044:44044" # Порт для вашего приложения
    depends_on:
      pg:
        condition: service_healthy # Ждем, пока PostgreSQL станет доступным
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=${POSTGRES_HOST} # В контейнере PostgreSQL доступен по имени "pg"
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
      - CONFIG_PATH=${CONFIG_PATH} # Укажите абсолютный путь внутри контейнера
    env_file:
      - ./.env # Явно указываем файл gateway.env
    volumes:
      - ./gateway.env:/app/gateway.env # Монтируем gateway.env в контейнер
      - ./config:/app/config # Монтируем папку config в контейнер