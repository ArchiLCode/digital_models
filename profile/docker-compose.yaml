version: '3'

volumes:
  postgres_volume:
  profile_postgres_volume:

services:
  profile_db:
    image: postgres:14-alpine3.17
    environment:
      - POSTGRES_DB=${PROFILE_POSTGRES_DB}
      - POSTGRES_USER=${PROFILE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PROFILE_POSTGRES_PASSWORD}
    ports:
      - '${PROFILE_POSTGRES_PORT}:5432'
    volumes:
      - profile_postgres_volume:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 10s
      timeout: 5s
      retries: 5

  profile:
    build:
      context: ./profile
      dockerfile: Dockerfile
    ports:
      - '44045:44045'
    depends_on:
      profile_db:
        condition: service_healthy
    environment:
      - POSTGRES_DB=${PROFILE_POSTGRES_DB}
      - POSTGRES_USER=${PROFILE_POSTGRES_USER}
      - POSTGRES_PASSWORD=${PROFILE_POSTGRES_PASSWORD}
      - POSTGRES_HOST=profile_db
      - POSTGRES_PORT=${PROFILE_POSTGRES_PORT}
      - POSTGRES_SSLMODE=${POSTGRES_SSLMODE}
      - CONFIG_PATH=${CONFIG_PATH}
    volumes:
      - ./.env:/app/.env
      - ./profile/config:/app/config

  gateway:
    build:
      context: ./gateway
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    depends_on:
      app:
        condition: service_started
    environment:
      - APP_HOST=app
      - APP_PORT=44044
    volumes:
      - ./.env:/app/.env