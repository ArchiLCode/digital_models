# Используем официальный образ Go как базовый образ
FROM golang:1.23-alpine AS builder

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /app

# Устанавливаем необходимые пакеты для сборки
RUN apk add --no-cache git make gcc musl-dev

# Копируем go.mod и go.sum (если они есть) в рабочую директорию
COPY go.mod go.sum ./

# Загружаем зависимости
RUN go mod download

# Копируем исходные файлы проекта в рабочую директорию
COPY . .

WORKDIR /app/cmd/

# Собираем бинарный файл
RUN CGO_ENABLED=0 GOOS=linux go build -o ../gateway

# Вторая стадия: создаем минимальный образ с только что собранным бинарным файлом
FROM alpine:latest

# Устанавливаем необходимые утилиты
RUN apk --no-cache add ca-certificates

# Устанавливаем рабочую директорию внутри контейнера
WORKDIR /root/

# Копируем бинарный файл из первой стадии сборки
COPY --from=builder /app/gateway .

# Указываем порт, на котором будет работать приложение
EXPOSE 8080

# Команда по умолчанию, которая будет выполняться при запуске контейнера
CMD ["./gateway"]