version: '3.8'

services:
  app:
    build: .
    ports:
      - '${SERVER_PORT}:${SERVER_PORT}'
    depends_on:
      - postgres
    environment:
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - SERVER_PORT=${SERVER_PORT}
    networks:
      - messenger-network
    restart: unless-stopped

  postgres:
    image: postgres:15-alpine
    ports:
      - '${DB_PORT}:5432'
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - ./scripts/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
    networks:
      - messenger-network
    restart: unless-stopped
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${DB_USER} -d ${DB_NAME}']
      interval: 10s
      timeout: 5s
      retries: 5
    expose:
      - 5432

volumes:
  postgres-data:

networks:
  messenger-network:
    driver: bridge
